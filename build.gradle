plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'com.saucedemo'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    seleniumVersion = '4.15.0'
    cucumberVersion = '7.14.0'
    allureVersion = '2.24.0'
    testngVersion = '7.8.0'
    webdrivermanagerVersion = '5.5.3'
}

dependencies {
    // Selenium WebDriver
    implementation("org.seleniumhq.selenium:selenium-java:${seleniumVersion}")
    implementation("org.seleniumhq.selenium:selenium-support:${seleniumVersion}")

    // WebDriverManager for automatic driver management
    implementation("io.github.bonigarcia:webdrivermanager:${webdrivermanagerVersion}")

    // Cucumber
    testImplementation("io.cucumber:cucumber-java:${cucumberVersion}")
    testImplementation("io.cucumber:cucumber-testng:${cucumberVersion}")
    testImplementation("io.cucumber:cucumber-picocontainer:${cucumberVersion}")

    // TestNG
    testImplementation("org.testng:testng:${testngVersion}")

    // Allure
    testImplementation("io.qameta.allure:allure-cucumber7-jvm:${allureVersion}")
    testImplementation("io.qameta.allure:allure-testng:${allureVersion}")

    // Logging
    implementation("org.slf4j:slf4j-api:2.0.9")
    implementation("ch.qos.logback:logback-classic:1.4.11")

    // Configuration
    implementation("com.typesafe:config:1.4.3")

    // Utilities
    implementation('org.apache.commons:commons-lang3:3.13.0')
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.2")
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            cucumber7 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

test {
    useTestNG()

    systemProperties = [
            'cucumber.options': '--plugin io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm'
    ]

    // Pass system properties to tests
    systemProperties.putAll(System.getProperties())

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Task to run specific cucumber tags
tasks.register('cucumberTest', Test) {
    useTestNG()

    systemProperty 'cucumber.filter.tags', project.findProperty('tags') ?: '@smoke'
    systemProperty 'cucumber.options', '--plugin io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm'

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Task to generate Allure report
tasks.register('execAllureServe', Exec) {
    dependsOn test
    commandLine 'allure', 'serve', 'build/allure-results'
}

// Clean Allure results
tasks.register('cleanAllure', Delete) {
    delete 'build/allure-results'
    delete 'build/reports/allure-report'
}